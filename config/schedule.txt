一次debug的流程

1.用户登录网站，然后上传题目描述，可以是题目的截图或具体的题目链接

2.用户上传代码文件(c,c++,golang)

3.后台根据数据库状态进行判断，从而获取本次提交状态
(改名用户已经提交了一份代码或者当日代码提交达到总的上限，都会返回提交失败的信息)

4.若提交成功
    4.1如果是今天提交的第一份代码，那么就创建一个以今天日期为名的文件夹
        (记得只有一个数位的日期前要补零,方便排序)
    4.2对于每一份代码，都应该创建一个以数据库主键为名的文件夹，
        然后创建origin.language和copy.language两份文件，表示原件和副本，
        并且执行git命令,从而创建一个初始化的版本 ：(1) git init (2) git add origin.language
5.管理员登录网站，查看上传的题目描述信息，下载用户提交的代码文件夹到本地

6.管理员在本地对origin.language进行修改

7.上传修改过后的origin.language文件，然后覆盖服务器上的对应文件

8.执行git diff origin.language > ./diff.txt命令

final： 到目前为止，一次debug已经完成了！！！

1.后续对于完成debug的任务进行查看，只需要获取到diff.txt文件即可，
    然后根据第一个字符来进行对应的渲染即可

2.关于渲染，有两种模式即可，分别是Split和unified（先不加Ignore whitespace功能）


